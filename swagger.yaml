openapi: 3.0.0
info:
  title: Takeat Integration
  version: 1.0.0
  description: an OpenAPI REST descriptor
servers:
  - url: https://testbackend.takeat.app
    description: Servidor de testes
  - url: https://backend.takeat.app
    description: Servidor de produção
paths:
  /public/omni/orders:
    post:
      summary: Cria novos pedidos
      description: |
        Endpoint responsável por criar pedidos.\
        Exemplo de body pode ser encontrado [aqui](/omni/example.json).
      parameters: []
      responses:
        '200':
          description: Operation Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMsg'
        '400':
          description: |
            Operation Response \
            \
            Possíveis errorTypes:
              - **duplicated_order_id**: Já existe um pedido com mesmo id no restaurante
              - **invalid_product_complement**: Existe um complemento não associado a um dos produtos
              - **invalid_buyer**: Faltando nome ou telefone do cliente
              - **restaurant_not_found**: Restaurante não foi encontrado, id do restaurante é inválido
              - **order_empty**: Array order está vazio
              - **product_not_found**: Produto não encontrado, verificar SKU
              - **complement_not_found**: Produto não encontrado, verificar SKU
              
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMsg'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderData'
    put:
      summary: Atualiza o estado de um pedido
      description: |
        Atualiza o estado de um pedido.\
        Os estados possíveis são accepted, ready, finished ou canceled, seguindo essa ordem prioridade. \
        Por exemplo, se um pedido de estado **finished** e não pode ser alterado para **accepted**.
      parameters: []
      responses:
        '200':
          description: Operation Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMsg'
        '400':
          description: |
            Operation Response \
            \
            Possíveis errorTypes:
              - **restaurant_not_found**: Restaurante não foi encontrado, id do restaurante é inválido
              - **order_not_found**: Pedido não encontrado no restaurante, id do pedido é inválido
              - **status_priority_violation**: Quando não é possivel atualizar o pedido devido a prioridade
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMsg'
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderData'
components:
  schemas:
    OrderData:
      type: object
      properties:
        id:
          type: string
          description: id único do pedido na Omni
        paid:
          type: boolean
          description: informa se o pedido foi pago ou não, deve estar acompanhado do pagamento
        total:
          type: number
          description: soma dos preços dos itens/produtos do pedido
        delivery_price:
          type: number
          description: taxa de entrega cobrado pelo restaurante
        total_delivery_price:
          type: number
          description: total + total_delivery_price
        user_change:
          type: number
          description: troco do cliente, caso o pagamento seja em dinheiro
        restaurant_id:
          type: string
          description: código único do restauante na Omni
        buyer:
          $ref: '#/components/schemas/Buyer'
        payment:
          $ref: '#/components/schemas/Payment'
        order:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Buyer:
      type: object
      properties:
        id:
          type: string
          description: id único do cliente na Omni
        phone:
          type: string
          description: telefone do cliente
        name:
          type: string
          description: nome do cliente
        country:
          type: string
          description: país... normalmente BR
        state:
          type: string
          description: estado... ES, RJ, SP e etc.
        city:
          type: string
          description: cidade... Vitória, Niterói, Rio de Janeiro, São Paulo e etc
        neighborhood:
          type: string
          description: bairro... Jardim da Penha, Bangu e etc
        number:
          type: number
          description: número da residência
        zip_code:
          type: string
          description: código postal (CEP)
        complement:
          type: string
          description: complemento do endereço
        reference:
          type: string
          description: referência do endereço
    Payment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: nome ou bandeira do pagamento, Pix, Mastercard crédito, etc.
        value:
          type: number
          description: valor pago
    Product:
      type: object
      properties:
        sku:
          type: string
          description: SKU do produto
        price:
          type: number
          description: preço unitário do produto na Omni
        amount:
          type: number
          description: quantidade vendida deste produto
        observation:
          type: string
          description: anotação/observação do cliente para o produto
        weight:
          type: number
          description: massa em gramas informado pelo cliente para o produto, se for o caso
        complements:
          description: complementos do produto
          type: array
          items:
            $ref: '#/components/schemas/Complement'
    Complement:
      type: object
      properties:
        sku:
          type: string
          description: SKU do complemento
        price:
          type: number
          description: preço unitário do complemento na Omni
        amount:
          type: number
          description: quantidade vendida deste complemento
    UpdateOrderData:
      type: object
      properties:
        id:
          type: string
          description: id único do pedido na Omni
        restaurant_id:
          type: string
          description: id único do restaurante na Omni
        status:
          type: string
          enum: ['accepted', 'ready', 'finished', 'canceled']
          description: novo estado do pedido
    SuccessMsg:
      type: object
      properties:
        success:
          type: boolean
        msg:
          type: string
    ErrorMsg:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        errorType:
          type: string
